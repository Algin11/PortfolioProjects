-- Creating Table For Data Manipulation
CREATE DATABASE IF NOT EXISTS Covid_Deaths;

USE Covid_Cases;

CREATE TABLE Covid_Deaths
(
	iso_code VARCHAR(255)
, 	continent VARCHAR(255)
,	location VARCHAR(255)
,	date DATE
,	population INT
,	total_cases INT
,	new_cases INT
,	new_cases_smoothed INT
,	total_deaths INT
,	new_deaths INT
,	new_deaths_smoothed INT
,	total_cases_per_million INT
,	new_cases_per_million INT
,	new_cases_smoothed_per_million INT
,	total_deaths_per_million INT
,	new_deaths_per_million INT
,	new_deaths_smoothed_per_million INT
,	reproduction_rate INT
,	icu_patients INT
,	icu_patients_per_million INT
,	hosp_patients INT
,	hosp_patients_per_million INT
,	weekly_icu_admissions INT
,	weekly_icu_admissions_per_million INT
,	weekly_hosp_admissions INT
,	weekly_hosp_admissions_per_million INT )

SET GLOBAL LOCAL_INFILE = ON ;
LOAD DATA LOCAL INFILE 'D:/Data Analyst/Data analyst/PROJECTS/COVID CASES/raw files/Covid_Deaths.csv' INTO TABLE covid_deaths
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
IGNORE 1 LINES;


CREATE DATABASE IF NOT EXISTS Covid_Vaccinations;

USE Covid_Cases;

CREATE TABLE Covid_Vaccinations
(
	iso_code VARCHAR(255)
, 	continent VARCHAR(255)
,	location VARCHAR(255)
,	date DATE
,	new_tests INT
,	total_tests INT
,	total_tests_per_thousand INT
,	new_tests_per_thousand INT
,	new_tests_smoothed INT
,	new_tests_smoothed_per_thousand INT
,	positive_rate INT
,	tests_per_case INT
,	tests_units INT
,	total_vaccinations INT
,	people_vaccinated INT
,	people_fully_vaccinated INT
,	new_vaccinations INT
,	new_vaccinations_smoothed INT
,	total_vaccinations_per_hundred INT
,	people_vaccinated_per_hundred INT
,	people_fully_vaccinated_per_hundred INT
,	new_vaccinations_smoothed_per_million INT
,	stringency_index INT
,	population_density INT
,	median_age INT
,	aged_65_older INT
,	aged_70_older INT
,	gdp_per_capita INT
,	extreme_poverty INT
,	cardiovasc_death_rate INT
,	diabetes_prevalence INT
,	female_smokers INT
,	male_smokers INT
,	handwashing_facilities INT
,	hospital_beds_per_thousand INT
,	life_expectancy INT
,	human_development_index INT )

LOAD DATA LOCAL INFILE 'D:/Data Analyst/Data analyst/PROJECTS/COVID CASES/raw files/Covid_Vaccinations.csv' INTO TABLE covid_vaccinations
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
IGNORE 1 LINES;

-- Checking For Duplicate
WITH DUP1 AS (
SELECT 	*
	,	ROW_NUMBER() OVER (PARTITION BY 	iso_code
										,	continent
                                        ,	location
                                        ,	date
                                        ,	population
                                        ,	total_cases
                                        ,	new_cases
                                        ,	new_cases_smoothed
                                        ,	total_deaths
                                        ,	new_deaths
                                        ,	new_deaths_smoothed
                                        ,	total_cases_per_million
                                        ,	new_cases_per_million
                                        ,	new_cases_smoothed_per_million
                                        ,	total_deaths_per_million
                                        ,	new_deaths_per_million
                                        ,	new_deaths_smoothed_per_million
                                        ,	reproduction_rate
                                        ,	icu_patients
                                        ,	icu_patients_per_million
                                        ,	hosp_patients
                                        ,	hosp_patients_per_million
                                        ,	weekly_icu_admissions
                                        ,	weekly_icu_admissions_per_million
                                        ,	weekly_hosp_admissions
                                        ,	weekly_hosp_admissions_per_million ) AS Row_Numb
                                        
FROM covid_cases.covid_deaths )

SELECT *
FROM DUP1
WHERE Row_Numb > 1

WITH DUP2 AS(
SELECT	*
	,	ROW_NUMBER() OVER (PARTITION BY		iso_code
										,	continent
                                        ,	location
                                        ,	date
                                        ,	new_tests
                                        ,	total_tests
                                        ,	total_tests_per_thousand
                                        ,	new_tests_per_thousand
                                        ,	new_tests_smoothed
                                        ,	new_tests_smoothed_per_thousand
                                        ,	positive_rate
                                        ,	tests_per_case
                                        ,	tests_units
                                        ,	total_vaccinations
                                        ,	people_vaccinated
                                        ,	people_fully_vaccinated
                                        ,	new_vaccinations
                                        ,	new_vaccinations_smoothed
                                        ,	total_vaccinations_per_hundred
                                        ,	people_vaccinated_per_hundred
                                        ,	people_fully_vaccinated_per_hundred
                                        ,	new_vaccinations_smoothed_per_million
                                        ,	stringency_index
                                        ,	population_density
                                        ,	median_age
                                        ,	aged_65_older
                                        ,	aged_70_older
                                        ,	gdp_per_capita
                                        ,	extreme_poverty
                                        ,	cardiovasc_death_rate
                                        ,	diabetes_prevalence
                                        ,	female_smokers
                                        ,	male_smokers
                                        ,	handwashing_facilities
                                        ,	hospital_beds_per_thousand
                                        ,	life_expectancy
                                        ,	human_development_index ) AS Row_Numb
FROM covid_cases.covid_vaccinations )

SELECT *
FROM DUP2 
WHERE Row_Numb > 1

-- Cheking For Null
SELECT *
FROM covid_cases.covid_deaths
WHERE	iso_code IS NULL
	OR	continent IS NULL
    OR	location IS NULL
    OR	date IS NULL
    OR	population IS NULL
    OR	total_cases IS NULL
    OR	new_cases IS NULL
    OR	new_cases_smoothed IS NULL
    OR	total_deaths IS NULL
    OR	new_deaths IS NULL
    OR 	new_deaths_smoothed IS NULL
    OR	total_cases_per_million IS NULL
    OR	new_cases_per_million IS NULL
    OR	new_cases_smoothed_per_million IS NULL
    OR	total_deaths_per_million IS NULL
    OR	new_deaths_per_million IS NULL
    OR	new_deaths_smoothed_per_million IS NULL
    OR	reproduction_rate IS NULL
    OR 	icu_patients IS NULL
    OR	icu_patients_per_million IS NULL
    OR	hosp_patients IS NULL
    OR	hosp_patients_per_million IS NULL
    OR	weekly_icu_admissions IS NULL
    OR 	weekly_icu_admissions_per_million IS NULL
    OR	weekly_hosp_admissions IS NULL
    OR	weekly_hosp_admissions_per_million IS NULL

SELECT *
FROM covid_cases.covid_vaccinations
WHERE	iso_code IS NULL
	OR	continent IS NULL
    OR	location IS NULL
    OR	date IS NULL
    OR	new_tests IS NULL
    OR 	total_tests IS NULL
    OR	total_tests_per_thousand IS NULL
    OR	new_tests_per_thousand IS NULL
    OR	new_tests_smoothed IS NULL
    OR	new_tests_smoothed_per_thousand IS NULL
    OR	positive_rate IS NULL
    OR	tests_per_case IS NULL
    OR	tests_units IS NULL
    OR	total_vaccinations IS NULL
    OR	people_vaccinated IS NULL
    OR	people_fully_vaccinated IS NULL
    OR	new_vaccinations IS NULL
    OR	new_vaccinations_smoothed IS NULL
    OR	total_vaccinations_per_hundred IS NULL
    OR	people_vaccinated_per_hundred IS NULL
    OR	people_fully_vaccinated_per_hundred IS NULL
    OR	new_vaccinations_smoothed_per_million IS NULL
    OR	stringency_index IS NULL
	OR 	population_density IS NULL
    OR	median_age IS NULL
    OR	aged_65_older IS NULL
    OR	aged_70_older IS NULL
    OR	gdp_per_capita IS NULL
    OR	extreme_poverty IS NULL
    OR	cardiovasc_death_rate IS NULL
    OR	diabetes_prevalence IS NULL
    OR	female_smokers IS NULL
    OR	male_smokers IS NULL
    OR	handwashing_facilities IS NULL
    OR	hospital_beds_per_thousand IS NULL
    OR	life_expectancy IS NULL
	OR	human_development_index IS NULL
    
-- Data exploration
-- Table For Total Cases,New Cases and Total Deaths
SELECT	location
	,	date
	,	total_cases
	,	new_cases
	,	total_deaths
	,	population
FROM covid_cases.covid_deaths
WHERE Continent != ''
ORDER BY location ASC 

-- Table For Total Cases And Total Deaths
SELECT	location
	,	date
	,	total_cases
	,	new_cases
	,	total_deaths
	,	(total_deaths/total_cases)*100  AS death_percentage
FROM covid_cases.Covid_Deaths
WHERE Continent != ''
ORDER BY 1,2

-- Table For Total Cases And Population
SELECT	location
	,	date
	,	population
	,	total_cases
	,	(total_cases/population)*100  AS cases_percentage
FROM covid_cases.Covid_Deaths
WHERE Continent != ''
ORDER BY 1,2

-- Countries With Highest Infection Rate Compared To Population
SELECT	location
	,	population
	,	MAX(total_cases) AS highest_infection_count
	,	(MAX(total_cases)/population)*100  AS cases_percentage
FROM covid_cases.Covid_Deaths
WHERE Continent != ''
GROUP BY location, population
ORDER BY cases_percentage DESC

-- Countries With Highest Death Counts
SELECT	location
	,	MAX(total_deaths) AS total_deaths
FROM covid_cases.Covid_Deaths
WHERE Continent != ''
GROUP BY location
ORDER BY total_deaths DESC

-- Death Counts Per Continent
SELECT	location
	,	MAX(total_deaths) AS total_deaths
FROM covid_cases.Covid_Deaths
WHERE Continent = '' AND location != 'World' AND location != 'International'
GROUP BY location, population
ORDER BY total_deaths DESC

-- Global Numbers
SELECT
		CD.location
	,	MAX(CD.date) AS DATE
    ,	MAX(CD.population)  AS Population 
    ,	MAX(CD.total_cases) AS Total_Cases
    ,	MAX(CD.total_deaths) AS Total_Deaths
    ,	MAX(CV.total_vaccinations) AS Total_Vaccination
FROM covid_cases.Covid_Deaths CD
JOIN covid_cases.Covid_Vaccinations CV
	ON CD.location = CV.location AND CD.date = CV.date
WHERE CD.continent = '' AND CD.location = 'World'
GROUP BY CD.location

-- Total People Vaccinated Based On Population
SELECT	CD.continent
	,	CD.location
	,	CD.date
	,	CD.population
	,	CV.new_vaccinations
	,	SUM(CV.new_vaccinations) OVER (PARTITION BY CD.location ORDER BY CD.location,CD.date ) AS rolling_people_vaccination
FROM  covid_cases.Covid_Deaths CD
JOIN covid_cases.Covid_Vaccinations CV	
	ON CD.location = CV.location AND CD.date = CV.date
WHERE CD.continent != '' 
ORDER BY 2,3

-- Vaccianted Percentage Per Country Using CTE
WITH PopvsVac 
AS (
	SELECT	CD.continent
	,	CD.location
	,	CD.date
	,	CD.population
	,	CV.new_vaccinations
	,	SUM(CV.new_vaccinations) OVER (PARTITION BY CD.location ORDER BY CD.location,CD.date ) AS rolling_people_vaccination
FROM covid_cases.Covid_Deaths CD
JOIN covid_cases.Covid_Vaccinations CV	
	ON CD.location = CV.location
	and CD.date = CV.date
WHERE CD.continent != '')

SELECT * 
, 	(rolling_people_vaccination/Population)*100 AS RollingVaccinated_Percentage
FROM PopvsVac

-- Vaccianted Percentage Per Country Using Temp Table
CREATE DATABASE IF NOT EXISTS PopulationVaccinated ;
USE Covid_Cases;

CREATE TABLE PopulationVaccinated
(	Continent varchar(255)
,	Location varchar(255)
,	Date date
,	Population INT
,	New_Vaccination INT
,	RollingVaccinated INT )

INSERT INTO PopulationVaccinated
SELECT	CD.continent
	,	CD.location
	,	CD.date
	,	CD.population
	,	CV.new_vaccinations
	,	SUM(CV.new_vaccinations) OVER (PARTITION BY CD.location ORDER BY CD.location,CD.date ) 
FROM covid_cases.Covid_Deaths CD
JOIN covid_cases.Covid_Vaccinations CV	
	ON CD.location = CV.location
	and CD.date = CV.date
WHERE CD.continent != ''

SELECT * 
, 
(RollingVaccinated/Population)*100 AS RollingVaccinated_Percentage
FROM PopulationVaccinated

-- Total Case And Total Death Per Country
SELECT 	location
,		MAX(total_cases) AS total_case
,		MAX(total_deaths) AS total_death
FROM covid_cases.covid_deaths
WHERE continent != ''
GROUP BY location

-- Total Vaccination And Total Death Per Country
SELECT 	CD.location
,		MAX(CC.total_vaccinations)  AS total_vaccination
, 		MAX(CD.total_deaths)  AS total_death
FROM covid_cases.covid_deaths CD
JOIN covid_cases.covid_vaccinations CC
	ON CD.location =  CC.location AND CD.continent = CC.continent
WHERE CD.continent != ''
GROUP BY CD.location

-- Total Deaths Compared To Population
SELECT	location
,		population
,		MAX(total_deaths) AS  total_deaths	
FROM covid_cases.covid_deaths
WHERE continent != ''
GROUP BY location, population
ORDER BY location ASC

























    

    


